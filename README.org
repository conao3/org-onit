#+title: org-onit.el

* Introduction

This package provides automated ~org-clock-in~ and ~org-clock-out~ by adding ~Doing~ tag to a heading of an org mode buffer. While the ~Doing~ tag appears in an org buffer, Emacs Org mode maintains the task clocking.

You can say "I'm on it!".

#+CAPTION: Workflow with org-onit-toggle-doing, org-clock-into, and org-onit-goto-anchor
[[https://github.com/takaxp/contents/blob/master/org-onit/org-onit-toggle-doing.png]]

* Install

Please put ~org-onit.el~ into your =load-path=.

If you use ~package.el~ or other package manager, no necessary to add =(require 'org-onit)= to your ~init.el~ and just call toggle commands =org-onit-toggle-doing= or =org-onit-toggle-auto= in an org buffer.

** Additional package

It is recommended to install [[https://github.com/alphapapa/org-bookmark-heading][org-bookmark-heading]] because a normal jump by built-in ~bookmark.el~ is not sufficiently accurate for org buffers. [[https://github.com/alphapapa/org-bookmark-heading][org-bookmark-heading]] provides more precise jumping capability by adding ID property to each org mode heading. ~org-onit.el~ will use [[https://github.com/alphapapa/org-bookmark-heading][org-bookmark-heading]] if available but not mandatory.

* Recommend settings

** Highly recommended

#+begin_src emacs-lisp
(with-eval-after-load "org-clock"
  (setq org-clock-out-remove-zero-time-clocks t))
#+end_src

** Recommended keybindings

#+begin_src emacs-lisp
(with-eval-after-load "org"
  (global-set-key (kbd "C-<f11>") 'org-clock-goto)
  (define-key org-mode-map (kbd "<f11>") 'org-onit-toggle-doing)
  (define-key org-mode-map (kbd "M-<f11>") 'org-onit-toggle-auto)
  (define-key org-mode-map (kbd "S-<f11>") 'org-onit-goto-anchor))
#+end_src

** Optional settings

You can freely arrange =org-clock-frame-title-format=. If you install [[https://github.com/mallt/org-clock-today-mode][org-clock-toay.el]] in your system, then you can show a working time only for today.

#+begin_src emacs-lisp
(with-eval-after-load "org"
  (add-to-list 'org-tag-faces '("Doing" :foreground "#FF0000")))

(with-eval-after-load "org-clock"
  (setq org-clock-clocked-in-display 'frame-title) ;; or 'both
  (setq org-clock-frame-title-format
        '((:eval (format "%s|%s| %s"
                         (if org-onit--auto-clocking "Auto " "")
                         (org-onit-get-sign)
                         org-mode-line-string)))))
#+end_src

* How to use
** Manual approach

If you apply the above recommended keybindings, then just type =<f11>= in an org buffer. A tag of a heading having the cursor will be changed to =Doing= and automatically start to =org-clock-in=. You can go any buffers and do anything but you can go back to the =Doing= tagged heading by just typing =C-<f11>=. Typing =<f11>= again, then =org-clock-out= is executed and =Doing= tag will disappear. When you type =S-<f11>=, you can go back to the original position you are jumped from.

*** clock-in and clock-out triggers
**** clock-in triggers

=org-clock-in= will be called when:

- calling =org-onit-toggle-doing= if the task is not ~DONE~
- calling =org-onit-toggle-doing= at any headings if =org-onit-wakeup-done= is non-nil
- unfolding a heading if =org-onit-use-unfold-as-doing= is non-nil

**** clock-out triggers

=org-clock-out= will be called when:

- calling =org-onit-toggle-doing=
- making the task ~DONE~ or removing todo state

** Automated approach

Use =M-x org-onit-toggle-auto=. Toggling =org-clock-in= and =org-clock-out= will be done automatically no need to toggle =Doing= tag by yourself.

*** clock-in and clock-out triggers

**** clock-in triggers

=org-clock-in= will be called when:

- visiting a heading if the task is not ~DONE~
- visiting a heading if =org-onit-include-no-state-heading= is non-nil and the task is not ~DONE~
- making the task not ~DONE~

**** clock-out triggers

=org-clock-out= will be called when:

- switching to other headings if the task has a todo state (e.g. ~TODO~)
- switching to other headings if =org-onit-include-no-state-heading= is non-nil and the task is not ~DONE~
- making the task ~DONE~
- calling =org-onit-toggle-doing=

** Options
 - org-onit-wakeup-done
   - Allow switching to =org-clock-in= by =org-onit-toggle-doing= when the heading is DONE.
   - Default: nil
 - org-onit-include-no-state-heading
   - Allow switching to =org-clock-in= in any headings except headings in TODO when =org-onit-toggle-auto= is used
   - Default: nil
 - org-onit-encure-clock-out-when-exit
   - Call =org-clock-out= when killing Emacs if =org-clock-persis= is not ='history= or =nil=
   - Default: t
 - org-onit-use-unfold-as-doing
   - Call =org-clock-in= when a heading is unfold, not clocking, and having a todo state
   - Default: nil

** Hooks

 - org-onit-switch-task-hook
 - org-onit-start-autoclock-hook
 - org-onit-stop-autoclock-hook
 - org-onit-after-jump-hook
   #+begin_src emacs-lisp
   (defun my-org-reveal ()
     (org-reveal)
     (org-show-entry)
     (show-children))
   (add-hook 'org-onit-after-jump-hook #'my-org-reveal)
   #+end_src
* ChangeLog
 - 1.0.1 (2019-09-01)
   - Rename "todo status" to "todo state"
   - [breaking change] rename to =org-onit-include-no-state-heading=
   - [new] support to clock-out when removing todo state
 - 1.0.0 (2019-09-01)
   - initial release
